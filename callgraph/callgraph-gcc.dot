digraph callgraph {
"_ZdaPv" [label="operator delete []"];
"_ZdaPvj" [label="operator delete []"];
"_ZdlPv" [label="operator delete"];
"_ZdlPvj" [label="operator delete"];
"_Znaj" [label="operator new []"];
"_Znwj" [label="operator new"];
"__aeabi_double_init" [];
"__aeabi_float_init" [];
"__assert_func" [];
"__wrap_acos" [];
"__wrap_acosf" [];
"__wrap_acosh" [];
"__wrap_acoshf" [];
"__wrap_asin" [];
"__wrap_asinf" [];
"__wrap_asinh" [];
"__wrap_asinhf" [];
"__wrap_atan" [];
"__wrap_atanf" [];
"__wrap_atanh" [];
"__wrap_atanhf" [];
"__wrap_calloc" [];
"__wrap_cbrt" [];
"__wrap_cbrtf" [];
"__wrap_ceil" [];
"__wrap_ceilf" [];
"__wrap_copysign" [];
"__wrap_copysignf" [];
"__wrap_cosh" [];
"__wrap_coshf" [];
"__wrap_drem" [];
"__wrap_dremf" [];
"__wrap_exp10" [];
"__wrap_exp10f" [];
"__wrap_exp2" [];
"__wrap_exp2f" [];
"__wrap_expm1" [];
"__wrap_expm1f" [];
"__wrap_floor" [];
"__wrap_floorf" [];
"__wrap_fma" [];
"__wrap_fmaf" [];
"__wrap_fmod" [];
"__wrap_fmodf" [];
"__wrap_free" [];
"__wrap_getchar" [];
"__wrap_hypot" [];
"__wrap_hypotf" [];
"__wrap_ldexp" [];
"__wrap_ldexpf" [];
"__wrap_log10" [];
"__wrap_log10f" [];
"__wrap_log1p" [];
"__wrap_log1pf" [];
"__wrap_log2" [];
"__wrap_log2f" [];
"__wrap_malloc" [];
"__wrap_pow" [];
"__wrap_powf" [];
"__wrap_powint" [];
"__wrap_powintf" [];
"__wrap_printf" [];
"__wrap_putchar" [];
"__wrap_puts" [];
"__wrap_realloc" [];
"__wrap_remainder" [];
"__wrap_remainderf" [];
"__wrap_remquo" [];
"__wrap_remquof" [];
"__wrap_round" [];
"__wrap_roundf" [];
"__wrap_sinh" [];
"__wrap_sinhf" [];
"__wrap_snprintf" [];
"__wrap_sprintf" [];
"__wrap_tanh" [];
"__wrap_tanhf" [];
"__wrap_trunc" [];
"__wrap_truncf" [];
"__wrap_vprintf" [];
"__wrap_vsnprintf" [];
"_atoi" [];
"_close" [];
"_data_stage_xact" [];
"_etoa" [];
"_exit" [];
"_ff_pull_const_addr" [];
"_ff_pull_n" [];
"_ff_push_const_addr" [];
"_ff_push_n" [];
"_fstat" [];
"_ftoa" [];
"_getpid" [];
"_gettimeofday" [];
"_gpio_set_irq_enabled" [];
"_hw_endpoint_alloc" [];
"_hw_endpoint_buffer_control_update32" [];
"_hw_endpoint_close" [];
"_hw_endpoint_xfer_sync" [];
"_isatty" [];
"_kill" [];
"_lseek" [];
"_ntoa_format" [];
"_ntoa_long" [];
"_ntoa_long_long" [];
"_open" [];
"_out_buffer" [];
"_out_fct" [];
"_out_null" [];
"_out_rev" [];
"_prep_out_transaction" [];
"_read" [];
"_retrieve_unique_id_on_boot" [];
"_sbrk" [];
"_times" [];
"_tu_fifo_peek" [];
"_tu_fifo_peek_n" [];
"_tu_fifo_read_n" [];
"_tu_fifo_write_n" [];
"_vsnprintf" [];
"_watchdog_enable" [];
"_write" [];
"add_alarm_under_lock" [];
"advance_index" [];
"alarm_pool_add_alarm_at" [];
"alarm_pool_add_alarm_at_force_in_context" [];
"alarm_pool_add_repeating_timer_us" [];
"alarm_pool_alarm_callback" [];
"alarm_pool_cancel_alarm" [];
"alarm_pool_core_num" [];
"alarm_pool_create" [];
"alarm_pool_create_with_unused_hardware_alarm" [];
"alarm_pool_destroy" [];
"alarm_pool_dump" [];
"alarm_pool_dump_key" [];
"alarm_pool_get_default" [];
"alarm_pool_hardware_alarm_num" [];
"alarm_pool_init_default" [];
"alarm_pool_post_alloc_init" [];
"best_effort_wfe_or_timeout" [];
"busy_wait_ms" [];
"busy_wait_until" [];
"busy_wait_us" [];
"busy_wait_us_32" [];
"cancel_repeating_timer" [];
"cdcd_control_xfer_cb" [];
"cdcd_init" [];
"cdcd_open" [];
"cdcd_reset" [];
"cdcd_xfer_cb" [];
"check_per_iteration_timeout_us" [];
"check_single_timeout_us" [];
"check_sys_clock_khz" [];
"clock_configure" [];
"clock_configure_gpin" [];
"clock_get_hz" [];
"clock_gpio_init_int_frac" [];
"clock_set_reported_hz" [];
"clock_stop" [];
"clocks_enable_resus" [];
"clocks_handle_resus" [];
"clocks_init" [];
"clocks_irq_handler" [];
"configuration_reset" [];
"critical_section_deinit" [];
"critical_section_init" [];
"critical_section_init_with_lock_num" [];
"datetime_to_str" [];
"dcd_connect" [];
"dcd_disconnect" [];
"dcd_edpt0_status_complete" [];
"dcd_edpt_clear_stall" [];
"dcd_edpt_close" [];
"dcd_edpt_close_all" [];
"dcd_edpt_open" [];
"dcd_edpt_stall" [];
"dcd_edpt_xfer" [];
"dcd_event_handler" [];
"dcd_init" [];
"dcd_int_disable" [];
"dcd_int_enable" [];
"dcd_int_handler" [];
"dcd_remote_wakeup" [];
"dcd_rp2040_irq" [];
"dcd_set_address" [];
"dcd_sof_enable" [];
"dpow_0" [];
"dpow_1" [];
"dpow_int2" [];
"dpowint_0" [];
"drem_0" [];
"e15_is_bulkin_ep" [];
"e15_is_critical_frame_period" [];
"exit" [];
"flash_cs_force" [];
"flash_do_cmd" [];
"flash_enable_xip_via_boot2" [];
"flash_get_unique_id" [];
"flash_init_boot2_copyout" [];
"flash_range_erase" [];
"flash_range_program" [];
"fpow_0" [];
"fpow_int2" [];
"fpowint_0" [];
"frem_0" [];
"frequency_count_khz" [];
"get_user_irq_claim_index" [];
"getchar_timeout_us" [];
"gpio_acknowledge_irq" [];
"gpio_add_raw_irq_handler_masked" [];
"gpio_add_raw_irq_handler_with_order_priority_masked" [];
"gpio_debug_pins_init" [];
"gpio_default_irq_handler" [];
"gpio_deinit" [];
"gpio_get_drive_strength" [];
"gpio_get_function" [];
"gpio_get_pad" [];
"gpio_get_slew_rate" [];
"gpio_init" [];
"gpio_init_mask" [];
"gpio_is_input_hysteresis_enabled" [];
"gpio_remove_raw_irq_handler_masked" [];
"gpio_set_dormant_irq_enabled" [];
"gpio_set_drive_strength" [];
"gpio_set_function" [];
"gpio_set_inover" [];
"gpio_set_input_enabled" [];
"gpio_set_input_hysteresis_enabled" [];
"gpio_set_irq_callback" [];
"gpio_set_irq_enabled" [];
"gpio_set_irq_enabled_with_callback" [];
"gpio_set_irqover" [];
"gpio_set_oeover" [];
"gpio_set_outover" [];
"gpio_set_pulls" [];
"gpio_set_slew_rate" [];
"hard_assertion_failure" [];
"hardware_alarm_cancel" [];
"hardware_alarm_claim" [];
"hardware_alarm_claim_unused" [];
"hardware_alarm_force_irq" [];
"hardware_alarm_irq_handler" [];
"hardware_alarm_is_claimed" [];
"hardware_alarm_set_callback" [];
"hardware_alarm_set_target" [];
"hardware_alarm_unclaim" [];
"hw_claim_clear" [];
"hw_claim_lock" [];
"hw_claim_or_assert" [];
"hw_claim_unlock" [];
"hw_claim_unused_from_range" [];
"hw_endpoint_close" [];
"hw_endpoint_get_by_addr" [];
"hw_endpoint_init" [];
"hw_endpoint_reset_transfer" [];
"hw_endpoint_start_next_buffer" [];
"hw_endpoint_xfer" [];
"hw_endpoint_xfer_continue" [];
"hw_endpoint_xfer_start" [];
"hw_handle_buff_status" [];
"hw_is_claimed" [];
"i2c_deinit" [];
"i2c_init" [];
"i2c_read_blocking" [];
"i2c_read_blocking_internal" [];
"i2c_read_blocking_until" [];
"i2c_read_timeout_per_char_us" [];
"i2c_set_baudrate" [];
"i2c_set_slave_mode" [];
"i2c_write_blocking" [];
"i2c_write_blocking_internal" [];
"i2c_write_blocking_until" [];
"i2c_write_timeout_per_char_us" [];
"init_per_iteration_timeout_us" [];
"init_single_timeout_until" [];
"insert_branch_and_link" [];
"invoke_class_control" [];
"irq_add_shared_handler" [];
"irq_add_tail_to_free_list" [];
"irq_get_exclusive_handler" [];
"irq_get_priority" [];
"irq_get_vtable_handler" [];
"irq_has_shared_handler" [];
"irq_init_priorities" [];
"irq_is_enabled" [];
"irq_remove_handler" [];
"irq_set_enabled" [];
"irq_set_exclusive_handler" [];
"irq_set_mask_enabled" [];
"irq_set_pending" [];
"irq_set_priority" [];
"ll_sht3x_read_status_register" [];
"lock_init" [];
"low_priority_worker_irq" [];
"main" [];
"make_branch" [];
"missing_double_func_shim" [];
"missing_float_func_shim" [];
"mutex_enter_block_until" [];
"mutex_enter_blocking" [];
"mutex_enter_timeout_ms" [];
"mutex_enter_timeout_us" [];
"mutex_exit" [];
"mutex_init" [];
"mutex_try_enter" [];
"mutex_try_enter_block_until" [];
"next_striped_spin_lock_num" [];
"panic" [];
"panic_unsupported" [];
"ph_add_child_node" [];
"ph_clear" [];
"ph_create" [];
"ph_destroy" [];
"ph_dump" [];
"ph_dump_node" [];
"ph_merge_nodes" [];
"ph_merge_two_pass" [];
"ph_post_alloc_init" [];
"ph_remove_and_free_node" [];
"ph_remove_any_head" [];
"ph_remove_head" [];
"pico_get_unique_board_id" [];
"pico_get_unique_board_id_string" [];
"pll_deinit" [];
"pll_init" [];
"prepare_ep_buffer" [];
"process_control_request" [];
"process_get_descriptor" [];
"process_set_config" [];
"putchar_raw" [];
"puts_raw" [];
"queue_add_blocking" [];
"queue_add_internal" [];
"queue_free" [];
"queue_init_with_spinlock" [];
"queue_peek_blocking" [];
"queue_peek_internal" [];
"queue_remove_blocking" [];
"queue_remove_internal" [];
"queue_try_add" [];
"queue_try_peek" [];
"queue_try_remove" [];
"recursive_mutex_enter_block_until" [];
"recursive_mutex_enter_blocking" [];
"recursive_mutex_enter_timeout_ms" [];
"recursive_mutex_enter_timeout_us" [];
"recursive_mutex_exit" [];
"recursive_mutex_init" [];
"recursive_mutex_try_enter" [];
"repeating_timer_callback" [];
"reset_non_control_endpoints" [];
"reset_usb_boot" [];
"resetd_control_xfer_cb" [];
"resetd_init" [];
"resetd_open" [];
"resetd_reset" [];
"resetd_xfer_cb" [];
"rom_data_lookup" [];
"rom_func_lookup" [];
"rom_funcs_lookup" [];
"rp2040_chip_version" [];
"rp2040_usb_device_enumeration_fix" [];
"rp2040_usb_init" [];
"running_on_fpga" [];
"runtime_init" [];
"runtime_install_stack_guard" [];
"sem_acquire_block_until" [];
"sem_acquire_blocking" [];
"sem_acquire_timeout_ms" [];
"sem_acquire_timeout_us" [];
"sem_available" [];
"sem_init" [];
"sem_release" [];
"sem_reset" [];
"sem_try_acquire" [];
"sensirion_common_bytes_to_float" [];
"sensirion_common_bytes_to_int16_t" [];
"sensirion_common_bytes_to_int32_t" [];
"sensirion_common_bytes_to_uint16_t" [];
"sensirion_common_bytes_to_uint32_t" [];
"sensirion_common_copy_bytes" [];
"sensirion_common_float_to_bytes" [];
"sensirion_common_int16_t_to_bytes" [];
"sensirion_common_int32_t_to_bytes" [];
"sensirion_common_uint16_t_to_bytes" [];
"sensirion_common_uint32_t_to_bytes" [];
"sensirion_i2c_add_bytes_to_buffer" [];
"sensirion_i2c_add_command16_to_buffer" [];
"sensirion_i2c_add_command8_to_buffer" [];
"sensirion_i2c_add_command_to_buffer" [];
"sensirion_i2c_add_float_to_buffer" [];
"sensirion_i2c_add_int16_t_to_buffer" [];
"sensirion_i2c_add_int32_t_to_buffer" [];
"sensirion_i2c_add_uint16_t_to_buffer" [];
"sensirion_i2c_add_uint32_t_to_buffer" [];
"sensirion_i2c_check_crc" [];
"sensirion_i2c_delayed_read_cmd" [];
"sensirion_i2c_fill_cmd_send_buf" [];
"sensirion_i2c_general_call_reset" [];
"sensirion_i2c_generate_crc" [];
"sensirion_i2c_hal_read" [];
"sensirion_i2c_hal_sleep_usec" [];
"sensirion_i2c_hal_write" [];
"sensirion_i2c_read_cmd" [];
"sensirion_i2c_read_data_inplace" [];
"sensirion_i2c_read_words" [];
"sensirion_i2c_read_words_as_bytes" [];
"sensirion_i2c_write_cmd" [];
"sensirion_i2c_write_cmd_with_args" [];
"sensirion_i2c_write_data" [];
"set_raw_irq_handler_and_unlock" [];
"set_sys_clock_48mhz" [];
"set_sys_clock_pll" [];
"settimeofday" [];
"setup_default_uart" [];
"sht3x_blocking_read_measurement" [];
"sht3x_clear_status_register" [];
"sht3x_disable_heater" [];
"sht3x_enable_heater" [];
"sht3x_init" [];
"sht3x_measure_single_shot" [];
"sht3x_measure_single_shot_high_repeatability" [];
"sht3x_measure_single_shot_high_repeatability_clock_stretching" [];
"sht3x_measure_single_shot_low_repeatability" [];
"sht3x_measure_single_shot_low_repeatability_clock_stretching" [];
"sht3x_measure_single_shot_medium_repeatability" [];
"sht3x_measure_single_shot_medium_repeatability_clock_stretching" [];
"sht3x_read_measurement" [];
"sht3x_read_status_register" [];
"sht3x_soft_reset" [];
"sht3x_start_art_measurement" [];
"sht3x_start_measurement_0_5_mps_high_repeatability" [];
"sht3x_start_measurement_0_5_mps_low_repeatability" [];
"sht3x_start_measurement_0_5_mps_medium_repeatability" [];
"sht3x_start_measurement_10_mps_high_repeatability" [];
"sht3x_start_measurement_10_mps_low_repeatability" [];
"sht3x_start_measurement_10_mps_medium_repeatability" [];
"sht3x_start_measurement_1_mps_high_repeatability" [];
"sht3x_start_measurement_1_mps_low_repeatability" [];
"sht3x_start_measurement_1_mps_medium_repeatability" [];
"sht3x_start_measurement_2_mps_high_repeatability" [];
"sht3x_start_measurement_2_mps_low_repeatability" [];
"sht3x_start_measurement_2_mps_medium_repeatability" [];
"sht3x_start_measurement_4_mps_high_repeatability" [];
"sht3x_start_measurement_4_mps_low_repeatability" [];
"sht3x_start_measurement_4_mps_medium_repeatability" [];
"sht3x_start_periodic_measurement" [];
"sht3x_stop_measurement" [];
"signal_humidity" [];
"signal_temperature" [];
"sleep_ms" [];
"sleep_until" [];
"sleep_until_callback" [];
"sleep_us" [];
"spin_lock_claim" [];
"spin_lock_claim_mask" [];
"spin_lock_claim_unused" [];
"spin_lock_init" [];
"spin_lock_is_claimed" [];
"spin_lock_unclaim" [];
"spin_locks_reset" [];
"stdio_buffered_printer" [];
"stdio_filter_driver" [];
"stdio_flush" [];
"stdio_get_until" [];
"stdio_init_all" [];
"stdio_out_chars_crlf" [];
"stdio_out_chars_no_crlf" [];
"stdio_put_string" [];
"stdio_set_chars_available_callback" [];
"stdio_set_driver_enabled" [];
"stdio_set_translate_crlf" [];
"stdio_stack_buffer_flush" [];
"stdio_usb_connected" [];
"stdio_usb_in_chars" [];
"stdio_usb_init" [];
"stdio_usb_out_chars" [];
"stdio_usb_set_chars_available_callback" [];
"stdout_serialize_begin" [];
"stdout_serialize_end" [];
"sync_ep_buffer" [];
"time_us_64" [];
"timer_pool_entry_comparator" [];
"timer_task" [];
"tu_desc_find" [];
"tu_desc_find2" [];
"tu_desc_find3" [];
"tu_desc_get_interface_total_len" [];
"tu_edpt_bind_driver" [];
"tu_edpt_claim" [];
"tu_edpt_release" [];
"tu_edpt_stream_init" [];
"tu_edpt_stream_read" [];
"tu_edpt_stream_read_xfer" [];
"tu_edpt_stream_write" [];
"tu_edpt_stream_write_xfer" [];
"tu_edpt_stream_write_zlp_if_needed" [];
"tu_edpt_validate" [];
"tu_fifo_advance_read_pointer" [];
"tu_fifo_advance_write_pointer" [];
"tu_fifo_clear" [];
"tu_fifo_config" [];
"tu_fifo_correct_read_pointer" [];
"tu_fifo_count" [];
"tu_fifo_empty" [];
"tu_fifo_full" [];
"tu_fifo_get_read_info" [];
"tu_fifo_get_write_info" [];
"tu_fifo_overflowed" [];
"tu_fifo_peek" [];
"tu_fifo_peek_n" [];
"tu_fifo_read" [];
"tu_fifo_read_n" [];
"tu_fifo_read_n_const_addr_full_words" [];
"tu_fifo_remaining" [];
"tu_fifo_set_overwritable" [];
"tu_fifo_write" [];
"tu_fifo_write_n" [];
"tu_fifo_write_n_const_addr_full_words" [];
"tud_cdc_line_coding_cb" [];
"tud_cdc_n_available" [];
"tud_cdc_n_connected" [];
"tud_cdc_n_get_line_coding" [];
"tud_cdc_n_get_line_state" [];
"tud_cdc_n_peek" [];
"tud_cdc_n_read" [];
"tud_cdc_n_read_flush" [];
"tud_cdc_n_set_wanted_char" [];
"tud_cdc_n_write" [];
"tud_cdc_n_write_available" [];
"tud_cdc_n_write_clear" [];
"tud_cdc_n_write_flush" [];
"tud_cdc_rx_cb" [];
"tud_connect" [];
"tud_connected" [];
"tud_control_status" [];
"tud_control_xfer" [];
"tud_descriptor_configuration_cb" [];
"tud_descriptor_device_cb" [];
"tud_descriptor_string_cb" [];
"tud_disconnect" [];
"tud_init" [];
"tud_inited" [];
"tud_mounted" [];
"tud_remote_wakeup" [];
"tud_speed_get" [];
"tud_suspended" [];
"tud_task_event_ready" [];
"tud_task_ext" [];
"tusb_init" [];
"tusb_inited" [];
"uart_deinit" [];
"uart_disable_before_lcr_write" [];
"uart_init" [];
"uart_is_readable_within_us" [];
"uart_set_baudrate" [];
"uart_set_break" [];
"uart_set_fifo_enabled" [];
"uart_set_format" [];
"uart_set_translate_crlf" [];
"uart_write_lcr_bits_masked" [];
"usb_irq" [];
"usbd_app_driver_get_cb" [];
"usbd_control_reset" [];
"usbd_control_set_complete_callback" [];
"usbd_control_set_request" [];
"usbd_control_xfer_cb" [];
"usbd_defer_func" [];
"usbd_edpt_busy" [];
"usbd_edpt_claim" [];
"usbd_edpt_clear_stall" [];
"usbd_edpt_close" [];
"usbd_edpt_open" [];
"usbd_edpt_release" [];
"usbd_edpt_stall" [];
"usbd_edpt_stalled" [];
"usbd_edpt_xfer" [];
"usbd_edpt_xfer_fifo" [];
"usbd_int_set" [];
"usbd_open_edpt_pair" [];
"usbd_reset" [];
"usbd_sof_enable" [];
"user_irq_claim" [];
"user_irq_claim_unused" [];
"user_irq_is_claimed" [];
"user_irq_unclaim" [];
"vfctprintf" [];
"vreg_set_voltage" [];
"watchdog_caused_reboot" [];
"watchdog_enable" [];
"watchdog_enable_caused_reboot" [];
"watchdog_get_count" [];
"watchdog_reboot" [];
"watchdog_start_tick" [];
"watchdog_update" [];
"xosc_disable" [];
"xosc_dormant" [];
"xosc_init" [];
"__aeabi_double_init" -> "__assert_func" [style=solid];
"__aeabi_double_init" -> "missing_double_func_shim" [style=dotted];
"__aeabi_double_init" -> "panic" [style=solid];
"__aeabi_double_init" -> "rom_data_lookup" [style=solid];
"__aeabi_double_init" -> "rom_func_lookup" [style=solid];
"__aeabi_float_init" -> "__assert_func" [style=solid];
"__aeabi_float_init" -> "missing_float_func_shim" [style=dotted];
"__aeabi_float_init" -> "rom_data_lookup" [style=solid];
"__aeabi_float_init" -> "rom_func_lookup" [style=solid];
"__assert_func" -> "_exit" [style=solid];
"__wrap_calloc" -> "panic" [style=solid];
"__wrap_fmod" -> "drem_0" [style=solid];
"__wrap_fmodf" -> "frem_0" [style=solid];
"__wrap_getchar" -> "__assert_func" [style=solid];
"__wrap_getchar" -> "stdio_get_until" [style=solid];
"__wrap_malloc" -> "panic" [style=solid];
"__wrap_pow" -> "dpow_0" [style=solid];
"__wrap_pow" -> "dpow_1" [style=solid];
"__wrap_powf" -> "fpow_0" [style=solid];
"__wrap_powint" -> "dpowint_0" [style=solid];
"__wrap_powintf" -> "fpowint_0" [style=solid];
"__wrap_putchar" -> "stdio_put_string" [style=solid];
"__wrap_puts" -> "stdio_flush" [style=solid];
"__wrap_puts" -> "stdio_put_string" [style=solid];
"__wrap_realloc" -> "panic" [style=solid];
"__wrap_remquo" -> "drem_0" [style=solid];
"__wrap_remquof" -> "frem_0" [style=solid];
"__wrap_snprintf" -> "_out_buffer" [style=dotted];
"__wrap_snprintf" -> "_vsnprintf" [style=solid];
"__wrap_sprintf" -> "_out_buffer" [style=dotted];
"__wrap_sprintf" -> "_vsnprintf" [style=solid];
"__wrap_vprintf" -> "stdio_buffered_printer" [style=dotted];
"__wrap_vprintf" -> "stdio_flush" [style=solid];
"__wrap_vprintf" -> "stdio_stack_buffer_flush" [style=solid];
"__wrap_vprintf" -> "stdout_serialize_begin" [style=solid];
"__wrap_vprintf" -> "stdout_serialize_end" [style=solid];
"__wrap_vprintf" -> "vfctprintf" [style=solid];
"__wrap_vsnprintf" -> "_out_buffer" [style=dotted];
"__wrap_vsnprintf" -> "_vsnprintf" [style=solid];
"_data_stage_xact" -> "usbd_edpt_xfer" [style=solid];
"_etoa" -> "_ftoa" [style=solid];
"_etoa" -> "_ntoa_long" [style=solid];
"_ff_pull_n" -> "_ff_pull_const_addr" [style=solid];
"_ff_push_n" -> "_ff_push_const_addr" [style=solid];
"_ftoa" -> "_etoa" [style=solid];
"_ftoa" -> "_out_rev" [style=solid];
"_gettimeofday" -> "__assert_func" [style=solid];
"_gettimeofday" -> "time_us_64" [style=solid];
"_gpio_set_irq_enabled" -> "gpio_acknowledge_irq" [style=solid];
"_hw_endpoint_alloc" -> "__assert_func" [style=solid];
"_hw_endpoint_buffer_control_update32" -> "panic" [style=solid];
"_hw_endpoint_xfer_sync" -> "sync_ep_buffer" [style=solid];
"_ntoa_format" -> "_out_rev" [style=solid];
"_ntoa_long" -> "_ntoa_format" [style=solid];
"_ntoa_long_long" -> "_ntoa_format" [style=solid];
"_prep_out_transaction" -> "tu_fifo_remaining" [style=solid];
"_prep_out_transaction" -> "usbd_edpt_claim" [style=solid];
"_prep_out_transaction" -> "usbd_edpt_release" [style=solid];
"_prep_out_transaction" -> "usbd_edpt_xfer" [style=solid];
"_read" -> "stdio_get_until" [style=solid];
"_retrieve_unique_id_on_boot" -> "flash_get_unique_id" [style=solid];
"_times" -> "__assert_func" [style=solid];
"_times" -> "time_us_64" [style=solid];
"_tu_fifo_peek_n" -> "_ff_pull_n" [style=solid];
"_tu_fifo_read_n" -> "_tu_fifo_peek_n" [style=solid];
"_tu_fifo_read_n" -> "advance_index" [style=solid];
"_tu_fifo_read_n" -> "mutex_enter_timeout_ms" [style=solid];
"_tu_fifo_read_n" -> "mutex_exit" [style=solid];
"_tu_fifo_write_n" -> "_ff_push_n" [style=solid];
"_tu_fifo_write_n" -> "advance_index" [style=solid];
"_tu_fifo_write_n" -> "mutex_enter_timeout_ms" [style=solid];
"_tu_fifo_write_n" -> "mutex_exit" [style=solid];
"_vsnprintf" -> "_atoi" [style=solid];
"_vsnprintf" -> "_etoa" [style=solid];
"_vsnprintf" -> "_ftoa" [style=solid];
"_vsnprintf" -> "_ntoa_long" [style=solid];
"_vsnprintf" -> "_ntoa_long_long" [style=solid];
"_vsnprintf" -> "_out_null" [style=dotted];
"_watchdog_enable" -> "watchdog_update" [style=solid];
"_write" -> "stdio_put_string" [style=solid];
"add_alarm_under_lock" -> "__assert_func" [style=solid];
"add_alarm_under_lock" -> "hardware_alarm_set_target" [style=solid];
"add_alarm_under_lock" -> "ph_merge_nodes" [style=solid];
"add_alarm_under_lock" -> "ph_remove_and_free_node" [style=solid];
"alarm_pool_add_alarm_at" -> "__assert_func" [style=solid];
"alarm_pool_add_alarm_at" -> "add_alarm_under_lock" [style=solid];
"alarm_pool_add_alarm_at" -> "time_us_64" [style=solid];
"alarm_pool_add_alarm_at_force_in_context" -> "__assert_func" [style=solid];
"alarm_pool_add_alarm_at_force_in_context" -> "add_alarm_under_lock" [style=solid];
"alarm_pool_add_alarm_at_force_in_context" -> "hardware_alarm_force_irq" [style=solid];
"alarm_pool_add_repeating_timer_us" -> "__assert_func" [style=solid];
"alarm_pool_add_repeating_timer_us" -> "alarm_pool_add_alarm_at" [style=solid];
"alarm_pool_add_repeating_timer_us" -> "repeating_timer_callback" [style=dotted];
"alarm_pool_add_repeating_timer_us" -> "time_us_64" [style=solid];
"alarm_pool_alarm_callback" -> "__assert_func" [style=solid];
"alarm_pool_alarm_callback" -> "add_alarm_under_lock" [style=solid];
"alarm_pool_alarm_callback" -> "hardware_alarm_set_target" [style=solid];
"alarm_pool_alarm_callback" -> "ph_remove_head" [style=solid];
"alarm_pool_alarm_callback" -> "time_us_64" [style=solid];
"alarm_pool_cancel_alarm" -> "__assert_func" [style=solid];
"alarm_pool_cancel_alarm" -> "ph_remove_and_free_node" [style=solid];
"alarm_pool_create" -> "alarm_pool_post_alloc_init" [style=solid];
"alarm_pool_create" -> "hardware_alarm_claim" [style=solid];
"alarm_pool_create" -> "ph_create" [style=solid];
"alarm_pool_create" -> "timer_pool_entry_comparator" [style=dotted];
"alarm_pool_create_with_unused_hardware_alarm" -> "alarm_pool_post_alloc_init" [style=solid];
"alarm_pool_create_with_unused_hardware_alarm" -> "hardware_alarm_claim_unused" [style=solid];
"alarm_pool_create_with_unused_hardware_alarm" -> "ph_create" [style=solid];
"alarm_pool_create_with_unused_hardware_alarm" -> "timer_pool_entry_comparator" [style=dotted];
"alarm_pool_destroy" -> "__assert_func" [style=solid];
"alarm_pool_destroy" -> "hardware_alarm_set_callback" [style=solid];
"alarm_pool_destroy" -> "hardware_alarm_unclaim" [style=solid];
"alarm_pool_destroy" -> "ph_destroy" [style=solid];
"alarm_pool_dump" -> "alarm_pool_dump_key" [style=dotted];
"alarm_pool_dump" -> "ph_dump" [style=solid];
"alarm_pool_dump_key" -> "__assert_func" [style=solid];
"alarm_pool_get_default" -> "__assert_func" [style=solid];
"alarm_pool_init_default" -> "alarm_pool_post_alloc_init" [style=solid];
"alarm_pool_init_default" -> "hardware_alarm_claim" [style=solid];
"alarm_pool_init_default" -> "lock_init" [style=solid];
"alarm_pool_init_default" -> "ph_post_alloc_init" [style=solid];
"alarm_pool_init_default" -> "timer_pool_entry_comparator" [style=dotted];
"alarm_pool_post_alloc_init" -> "alarm_pool_alarm_callback" [style=dotted];
"alarm_pool_post_alloc_init" -> "hardware_alarm_cancel" [style=solid];
"alarm_pool_post_alloc_init" -> "hardware_alarm_set_callback" [style=solid];
"alarm_pool_post_alloc_init" -> "next_striped_spin_lock_num" [style=solid];
"best_effort_wfe_or_timeout" -> "alarm_pool_add_alarm_at" [style=solid];
"best_effort_wfe_or_timeout" -> "alarm_pool_cancel_alarm" [style=solid];
"best_effort_wfe_or_timeout" -> "alarm_pool_get_default" [style=solid];
"best_effort_wfe_or_timeout" -> "sleep_until_callback" [style=dotted];
"busy_wait_ms" -> "busy_wait_us" [style=solid];
"busy_wait_ms" -> "busy_wait_us_32" [style=solid];
"busy_wait_us" -> "__assert_func" [style=solid];
"busy_wait_us" -> "busy_wait_until" [style=solid];
"busy_wait_us" -> "time_us_64" [style=solid];
"busy_wait_us_32" -> "busy_wait_us" [style=solid];
"cancel_repeating_timer" -> "alarm_pool_cancel_alarm" [style=solid];
"cdcd_control_xfer_cb" -> "tu_fifo_set_overwritable" [style=solid];
"cdcd_control_xfer_cb" -> "tud_cdc_line_coding_cb" [style=dotted];
"cdcd_control_xfer_cb" -> "tud_control_status" [style=solid];
"cdcd_control_xfer_cb" -> "tud_control_xfer" [style=solid];
"cdcd_init" -> "mutex_init" [style=solid];
"cdcd_init" -> "tu_fifo_config" [style=solid];
"cdcd_open" -> "_prep_out_transaction" [style=solid];
"cdcd_open" -> "usbd_edpt_open" [style=solid];
"cdcd_open" -> "usbd_open_edpt_pair" [style=solid];
"cdcd_reset" -> "tu_fifo_clear" [style=solid];
"cdcd_reset" -> "tu_fifo_set_overwritable" [style=solid];
"cdcd_xfer_cb" -> "_prep_out_transaction" [style=solid];
"cdcd_xfer_cb" -> "tu_fifo_count" [style=solid];
"cdcd_xfer_cb" -> "tu_fifo_empty" [style=solid];
"cdcd_xfer_cb" -> "tu_fifo_write_n" [style=solid];
"cdcd_xfer_cb" -> "tud_cdc_n_write_flush" [style=solid];
"cdcd_xfer_cb" -> "tud_cdc_rx_cb" [style=dotted];
"cdcd_xfer_cb" -> "usbd_edpt_claim" [style=solid];
"cdcd_xfer_cb" -> "usbd_edpt_xfer" [style=solid];
"check_per_iteration_timeout_us" -> "__assert_func" [style=solid];
"check_per_iteration_timeout_us" -> "time_us_64" [style=solid];
"clock_configure" -> "__assert_func" [style=solid];
"clock_configure_gpin" -> "clock_configure" [style=solid];
"clock_configure_gpin" -> "gpio_set_function" [style=solid];
"clock_gpio_init_int_frac" -> "gpio_set_function" [style=solid];
"clocks_enable_resus" -> "clocks_irq_handler" [style=dotted];
"clocks_enable_resus" -> "irq_set_enabled" [style=solid];
"clocks_enable_resus" -> "irq_set_exclusive_handler" [style=solid];
"clocks_handle_resus" -> "__assert_func" [style=solid];
"clocks_handle_resus" -> "clock_configure" [style=solid];
"clocks_handle_resus" -> "clock_get_hz" [style=solid];
"clocks_init" -> "clock_configure" [style=solid];
"clocks_init" -> "pll_init" [style=solid];
"clocks_init" -> "running_on_fpga" [style=solid];
"clocks_init" -> "watchdog_start_tick" [style=solid];
"clocks_init" -> "xosc_init" [style=solid];
"clocks_irq_handler" -> "clocks_handle_resus" [style=solid];
"clocks_irq_handler" -> "panic" [style=solid];
"configuration_reset" -> "usbd_app_driver_get_cb" [style=dotted];
"critical_section_deinit" -> "spin_lock_unclaim" [style=solid];
"critical_section_init" -> "critical_section_init_with_lock_num" [style=solid];
"critical_section_init" -> "spin_lock_claim_unused" [style=solid];
"dcd_edpt_clear_stall" -> "_hw_endpoint_buffer_control_update32" [style=solid];
"dcd_edpt_clear_stall" -> "hw_endpoint_get_by_addr" [style=solid];
"dcd_edpt_close" -> "hw_endpoint_close" [style=solid];
"dcd_edpt_close_all" -> "reset_non_control_endpoints" [style=solid];
"dcd_edpt_open" -> "__assert_func" [style=solid];
"dcd_edpt_open" -> "hw_endpoint_init" [style=solid];
"dcd_edpt_stall" -> "_hw_endpoint_buffer_control_update32" [style=solid];
"dcd_edpt_stall" -> "hw_endpoint_get_by_addr" [style=solid];
"dcd_edpt_xfer" -> "__assert_func" [style=solid];
"dcd_edpt_xfer" -> "hw_endpoint_xfer" [style=solid];
"dcd_event_handler" -> "tu_fifo_write" [style=solid];
"dcd_event_handler" -> "usbd_app_driver_get_cb" [style=dotted];
"dcd_init" -> "__assert_func" [style=solid];
"dcd_init" -> "dcd_connect" [style=solid];
"dcd_init" -> "dcd_rp2040_irq" [style=dotted];
"dcd_init" -> "hw_endpoint_init" [style=solid];
"dcd_init" -> "irq_add_shared_handler" [style=solid];
"dcd_init" -> "reset_non_control_endpoints" [style=solid];
"dcd_init" -> "rp2040_usb_init" [style=solid];
"dcd_int_disable" -> "__assert_func" [style=solid];
"dcd_int_disable" -> "irq_set_enabled" [style=solid];
"dcd_int_enable" -> "__assert_func" [style=solid];
"dcd_int_enable" -> "irq_set_enabled" [style=solid];
"dcd_int_handler" -> "dcd_rp2040_irq" [style=solid];
"dcd_remote_wakeup" -> "__assert_func" [style=solid];
"dcd_rp2040_irq" -> "dcd_event_handler" [style=solid];
"dcd_rp2040_irq" -> "hw_endpoint_get_by_addr" [style=solid];
"dcd_rp2040_irq" -> "hw_endpoint_start_next_buffer" [style=solid];
"dcd_rp2040_irq" -> "hw_handle_buff_status" [style=solid];
"dcd_rp2040_irq" -> "panic" [style=solid];
"dcd_rp2040_irq" -> "reset_non_control_endpoints" [style=solid];
"dcd_set_address" -> "__assert_func" [style=solid];
"dcd_set_address" -> "hw_endpoint_xfer" [style=solid];
"dpow_0" -> "dpow_0" [style=solid];
"dpow_0" -> "dpow_1" [style=solid];
"dpow_0" -> "dpow_int2" [style=solid];
"dpow_int2" -> "dpow_int2" [style=solid];
"dpowint_0" -> "dpow_1" [style=solid];
"dpowint_0" -> "dpow_int2" [style=solid];
"dpowint_0" -> "dpowint_0" [style=solid];
"e15_is_critical_frame_period" -> "e15_is_bulkin_ep" [style=solid];
"exit" -> "_exit" [style=solid];
"flash_do_cmd" -> "__assert_func" [style=solid];
"flash_do_cmd" -> "flash_cs_force" [style=solid];
"flash_do_cmd" -> "flash_enable_xip_via_boot2" [style=solid];
"flash_do_cmd" -> "flash_init_boot2_copyout" [style=solid];
"flash_get_unique_id" -> "flash_do_cmd" [style=solid];
"flash_range_erase" -> "__assert_func" [style=solid];
"flash_range_erase" -> "flash_enable_xip_via_boot2" [style=solid];
"flash_range_erase" -> "flash_init_boot2_copyout" [style=solid];
"flash_range_program" -> "__assert_func" [style=solid];
"flash_range_program" -> "flash_enable_xip_via_boot2" [style=solid];
"flash_range_program" -> "flash_init_boot2_copyout" [style=solid];
"fpow_0" -> "fpow_0" [style=solid];
"fpow_0" -> "fpow_int2" [style=solid];
"fpow_int2" -> "fpow_int2" [style=solid];
"fpowint_0" -> "fpow_int2" [style=solid];
"fpowint_0" -> "fpowint_0" [style=solid];
"frequency_count_khz" -> "clock_get_hz" [style=solid];
"getchar_timeout_us" -> "__assert_func" [style=solid];
"getchar_timeout_us" -> "stdio_get_until" [style=solid];
"getchar_timeout_us" -> "time_us_64" [style=solid];
"gpio_add_raw_irq_handler_masked" -> "gpio_add_raw_irq_handler_with_order_priority_masked" [style=solid];
"gpio_add_raw_irq_handler_with_order_priority_masked" -> "__assert_func" [style=solid];
"gpio_add_raw_irq_handler_with_order_priority_masked" -> "irq_add_shared_handler" [style=solid];
"gpio_debug_pins_init" -> "gpio_init_mask" [style=solid];
"gpio_default_irq_handler" -> "gpio_acknowledge_irq" [style=solid];
"gpio_deinit" -> "gpio_set_function" [style=solid];
"gpio_init" -> "gpio_set_function" [style=solid];
"gpio_init_mask" -> "gpio_init" [style=solid];
"gpio_remove_raw_irq_handler_masked" -> "__assert_func" [style=solid];
"gpio_remove_raw_irq_handler_masked" -> "irq_remove_handler" [style=solid];
"gpio_set_dormant_irq_enabled" -> "_gpio_set_irq_enabled" [style=solid];
"gpio_set_irq_callback" -> "gpio_default_irq_handler" [style=dotted];
"gpio_set_irq_callback" -> "irq_add_shared_handler" [style=solid];
"gpio_set_irq_callback" -> "irq_remove_handler" [style=solid];
"gpio_set_irq_enabled" -> "_gpio_set_irq_enabled" [style=solid];
"gpio_set_irq_enabled_with_callback" -> "gpio_set_irq_callback" [style=solid];
"gpio_set_irq_enabled_with_callback" -> "gpio_set_irq_enabled" [style=solid];
"gpio_set_irq_enabled_with_callback" -> "irq_set_enabled" [style=solid];
"hard_assertion_failure" -> "panic" [style=solid];
"hardware_alarm_claim" -> "hw_claim_or_assert" [style=solid];
"hardware_alarm_claim_unused" -> "hw_claim_unused_from_range" [style=solid];
"hardware_alarm_is_claimed" -> "hw_is_claimed" [style=solid];
"hardware_alarm_set_callback" -> "hardware_alarm_irq_handler" [style=dotted];
"hardware_alarm_set_callback" -> "irq_get_vtable_handler" [style=solid];
"hardware_alarm_set_callback" -> "irq_remove_handler" [style=solid];
"hardware_alarm_set_callback" -> "irq_set_enabled" [style=solid];
"hardware_alarm_set_callback" -> "irq_set_exclusive_handler" [style=solid];
"hardware_alarm_set_target" -> "__assert_func" [style=solid];
"hardware_alarm_set_target" -> "time_us_64" [style=solid];
"hardware_alarm_unclaim" -> "hw_claim_clear" [style=solid];
"hw_claim_clear" -> "__assert_func" [style=solid];
"hw_claim_clear" -> "hw_claim_lock" [style=solid];
"hw_claim_clear" -> "hw_claim_unlock" [style=solid];
"hw_claim_or_assert" -> "hw_claim_lock" [style=solid];
"hw_claim_or_assert" -> "hw_claim_unlock" [style=solid];
"hw_claim_or_assert" -> "panic" [style=solid];
"hw_claim_unused_from_range" -> "hw_claim_lock" [style=solid];
"hw_claim_unused_from_range" -> "hw_claim_unlock" [style=solid];
"hw_claim_unused_from_range" -> "panic" [style=solid];
"hw_endpoint_close" -> "_hw_endpoint_close" [style=solid];
"hw_endpoint_close" -> "hw_endpoint_get_by_addr" [style=solid];
"hw_endpoint_init" -> "_hw_endpoint_alloc" [style=solid];
"hw_endpoint_init" -> "hw_endpoint_get_by_addr" [style=solid];
"hw_endpoint_start_next_buffer" -> "_hw_endpoint_buffer_control_update32" [style=solid];
"hw_endpoint_start_next_buffer" -> "prepare_ep_buffer" [style=solid];
"hw_endpoint_xfer" -> "hw_endpoint_get_by_addr" [style=solid];
"hw_endpoint_xfer" -> "hw_endpoint_xfer_start" [style=solid];
"hw_endpoint_xfer_continue" -> "_hw_endpoint_xfer_sync" [style=solid];
"hw_endpoint_xfer_continue" -> "e15_is_critical_frame_period" [style=solid];
"hw_endpoint_xfer_continue" -> "hw_endpoint_start_next_buffer" [style=solid];
"hw_endpoint_xfer_continue" -> "panic" [style=solid];
"hw_endpoint_xfer_start" -> "e15_is_bulkin_ep" [style=solid];
"hw_endpoint_xfer_start" -> "e15_is_critical_frame_period" [style=solid];
"hw_endpoint_xfer_start" -> "hw_endpoint_reset_transfer" [style=solid];
"hw_endpoint_xfer_start" -> "hw_endpoint_start_next_buffer" [style=solid];
"hw_handle_buff_status" -> "dcd_event_handler" [style=solid];
"hw_handle_buff_status" -> "hw_endpoint_reset_transfer" [style=solid];
"hw_handle_buff_status" -> "hw_endpoint_xfer_continue" [style=solid];
"i2c_init" -> "i2c_set_baudrate" [style=solid];
"i2c_read_blocking" -> "i2c_read_blocking_internal" [style=solid];
"i2c_read_blocking_until" -> "i2c_read_blocking_internal" [style=solid];
"i2c_read_blocking_until" -> "init_single_timeout_until" [style=solid];
"i2c_read_timeout_per_char_us" -> "i2c_read_blocking_internal" [style=solid];
"i2c_read_timeout_per_char_us" -> "init_per_iteration_timeout_us" [style=solid];
"i2c_set_baudrate" -> "__assert_func" [style=solid];
"i2c_set_baudrate" -> "clock_get_hz" [style=solid];
"i2c_write_blocking" -> "i2c_write_blocking_internal" [style=solid];
"i2c_write_blocking_until" -> "i2c_write_blocking_internal" [style=solid];
"i2c_write_blocking_until" -> "init_single_timeout_until" [style=solid];
"i2c_write_timeout_per_char_us" -> "i2c_write_blocking_internal" [style=solid];
"i2c_write_timeout_per_char_us" -> "init_per_iteration_timeout_us" [style=solid];
"init_per_iteration_timeout_us" -> "__assert_func" [style=solid];
"init_per_iteration_timeout_us" -> "check_per_iteration_timeout_us" [style=dotted];
"init_per_iteration_timeout_us" -> "time_us_64" [style=solid];
"init_single_timeout_until" -> "check_single_timeout_us" [style=dotted];
"insert_branch_and_link" -> "__assert_func" [style=solid];
"invoke_class_control" -> "usbd_control_set_complete_callback" [style=solid];
"irq_add_shared_handler" -> "__assert_func" [style=solid];
"irq_add_shared_handler" -> "make_branch" [style=solid];
"irq_add_shared_handler" -> "set_raw_irq_handler_and_unlock" [style=solid];
"irq_add_tail_to_free_list" -> "__assert_func" [style=solid];
"irq_get_exclusive_handler" -> "irq_get_vtable_handler" [style=solid];
"irq_has_shared_handler" -> "irq_get_vtable_handler" [style=solid];
"irq_remove_handler" -> "__assert_func" [style=solid];
"irq_remove_handler" -> "insert_branch_and_link" [style=solid];
"irq_remove_handler" -> "irq_is_enabled" [style=solid];
"irq_remove_handler" -> "irq_set_enabled" [style=solid];
"irq_remove_handler" -> "make_branch" [style=solid];
"irq_remove_handler" -> "set_raw_irq_handler_and_unlock" [style=solid];
"irq_set_enabled" -> "irq_set_mask_enabled" [style=solid];
"irq_set_exclusive_handler" -> "__assert_func" [style=solid];
"irq_set_exclusive_handler" -> "irq_get_vtable_handler" [style=solid];
"irq_set_exclusive_handler" -> "set_raw_irq_handler_and_unlock" [style=solid];
"ll_sht3x_read_status_register" -> "sensirion_common_bytes_to_uint16_t" [style=solid];
"ll_sht3x_read_status_register" -> "sensirion_i2c_add_command16_to_buffer" [style=solid];
"ll_sht3x_read_status_register" -> "sensirion_i2c_hal_sleep_usec" [style=solid];
"ll_sht3x_read_status_register" -> "sensirion_i2c_read_data_inplace" [style=solid];
"ll_sht3x_read_status_register" -> "sensirion_i2c_write_data" [style=solid];
"low_priority_worker_irq" -> "__assert_func" [style=solid];
"low_priority_worker_irq" -> "alarm_pool_add_alarm_at" [style=solid];
"low_priority_worker_irq" -> "alarm_pool_get_default" [style=solid];
"low_priority_worker_irq" -> "mutex_exit" [style=solid];
"low_priority_worker_irq" -> "mutex_try_enter" [style=solid];
"low_priority_worker_irq" -> "time_us_64" [style=solid];
"low_priority_worker_irq" -> "timer_task" [style=dotted];
"low_priority_worker_irq" -> "tud_task_ext" [style=solid];
"main" -> "gpio_set_function" [style=solid];
"main" -> "gpio_set_pulls" [style=solid];
"main" -> "i2c_init" [style=solid];
"main" -> "sht3x_init" [style=solid];
"main" -> "sht3x_measure_single_shot" [style=solid];
"main" -> "sleep_ms" [style=solid];
"main" -> "stdio_init_all" [style=solid];
"make_branch" -> "__assert_func" [style=solid];
"missing_double_func_shim" -> "panic" [style=solid];
"missing_float_func_shim" -> "panic" [style=solid];
"mutex_enter_block_until" -> "__assert_func" [style=solid];
"mutex_enter_block_until" -> "best_effort_wfe_or_timeout" [style=solid];
"mutex_enter_timeout_ms" -> "__assert_func" [style=solid];
"mutex_enter_timeout_ms" -> "mutex_enter_block_until" [style=solid];
"mutex_enter_timeout_ms" -> "time_us_64" [style=solid];
"mutex_enter_timeout_us" -> "__assert_func" [style=solid];
"mutex_enter_timeout_us" -> "mutex_enter_block_until" [style=solid];
"mutex_enter_timeout_us" -> "time_us_64" [style=solid];
"mutex_exit" -> "__assert_func" [style=solid];
"mutex_init" -> "lock_init" [style=solid];
"mutex_init" -> "next_striped_spin_lock_num" [style=solid];
"mutex_try_enter_block_until" -> "mutex_enter_block_until" [style=solid];
"mutex_try_enter_block_until" -> "mutex_try_enter" [style=solid];
"panic" -> "_exit" [style=solid];
"panic_unsupported" -> "panic" [style=solid];
"ph_add_child_node" -> "__assert_func" [style=solid];
"ph_clear" -> "__assert_func" [style=solid];
"ph_create" -> "ph_post_alloc_init" [style=solid];
"ph_dump" -> "ph_dump_node" [style=solid];
"ph_dump_node" -> "__assert_func" [style=solid];
"ph_dump_node" -> "ph_dump_node" [style=solid];
"ph_merge_nodes" -> "ph_add_child_node" [style=solid];
"ph_merge_two_pass" -> "__assert_func" [style=solid];
"ph_merge_two_pass" -> "ph_merge_nodes" [style=solid];
"ph_merge_two_pass" -> "ph_merge_two_pass" [style=solid];
"ph_post_alloc_init" -> "ph_clear" [style=solid];
"ph_remove_and_free_node" -> "__assert_func" [style=solid];
"ph_remove_and_free_node" -> "ph_merge_nodes" [style=solid];
"ph_remove_and_free_node" -> "ph_remove_any_head" [style=solid];
"ph_remove_and_free_node" -> "ph_remove_head" [style=solid];
"ph_remove_any_head" -> "__assert_func" [style=solid];
"ph_remove_any_head" -> "ph_merge_two_pass" [style=solid];
"ph_remove_head" -> "ph_remove_any_head" [style=solid];
"pico_get_unique_board_id_string" -> "__assert_func" [style=solid];
"pll_init" -> "__assert_func" [style=solid];
"process_control_request" -> "configuration_reset" [style=solid];
"process_control_request" -> "dcd_edpt_close_all" [style=solid];
"process_control_request" -> "dcd_set_address" [style=solid];
"process_control_request" -> "invoke_class_control" [style=solid];
"process_control_request" -> "process_get_descriptor" [style=solid];
"process_control_request" -> "process_set_config" [style=solid];
"process_control_request" -> "tud_control_status" [style=solid];
"process_control_request" -> "tud_control_xfer" [style=solid];
"process_control_request" -> "usbd_app_driver_get_cb" [style=dotted];
"process_control_request" -> "usbd_control_set_complete_callback" [style=solid];
"process_control_request" -> "usbd_control_set_request" [style=solid];
"process_control_request" -> "usbd_edpt_clear_stall" [style=solid];
"process_control_request" -> "usbd_edpt_stall" [style=solid];
"process_control_request" -> "usbd_edpt_stalled" [style=solid];
"process_get_descriptor" -> "tud_control_xfer" [style=solid];
"process_get_descriptor" -> "tud_descriptor_configuration_cb" [style=solid];
"process_get_descriptor" -> "tud_descriptor_device_cb" [style=solid];
"process_get_descriptor" -> "tud_descriptor_string_cb" [style=solid];
"process_set_config" -> "cdcd_open" [style=dotted];
"process_set_config" -> "tu_edpt_bind_driver" [style=solid];
"process_set_config" -> "tud_descriptor_configuration_cb" [style=solid];
"process_set_config" -> "usbd_app_driver_get_cb" [style=dotted];
"putchar_raw" -> "stdio_put_string" [style=solid];
"puts_raw" -> "stdio_flush" [style=solid];
"puts_raw" -> "stdio_put_string" [style=solid];
"queue_add_blocking" -> "queue_add_internal" [style=solid];
"queue_add_internal" -> "__assert_func" [style=solid];
"queue_init_with_spinlock" -> "lock_init" [style=solid];
"queue_peek_blocking" -> "queue_peek_internal" [style=solid];
"queue_peek_internal" -> "__assert_func" [style=solid];
"queue_remove_blocking" -> "queue_remove_internal" [style=solid];
"queue_remove_internal" -> "__assert_func" [style=solid];
"queue_try_add" -> "queue_add_internal" [style=solid];
"queue_try_peek" -> "queue_peek_internal" [style=solid];
"queue_try_remove" -> "queue_remove_internal" [style=solid];
"recursive_mutex_enter_block_until" -> "__assert_func" [style=solid];
"recursive_mutex_enter_block_until" -> "best_effort_wfe_or_timeout" [style=solid];
"recursive_mutex_enter_blocking" -> "__assert_func" [style=solid];
"recursive_mutex_enter_timeout_ms" -> "__assert_func" [style=solid];
"recursive_mutex_enter_timeout_ms" -> "recursive_mutex_enter_block_until" [style=solid];
"recursive_mutex_enter_timeout_ms" -> "time_us_64" [style=solid];
"recursive_mutex_enter_timeout_us" -> "__assert_func" [style=solid];
"recursive_mutex_enter_timeout_us" -> "recursive_mutex_enter_block_until" [style=solid];
"recursive_mutex_enter_timeout_us" -> "time_us_64" [style=solid];
"recursive_mutex_exit" -> "__assert_func" [style=solid];
"recursive_mutex_init" -> "lock_init" [style=solid];
"recursive_mutex_init" -> "next_striped_spin_lock_num" [style=solid];
"recursive_mutex_try_enter" -> "__assert_func" [style=solid];
"repeating_timer_callback" -> "__assert_func" [style=solid];
"reset_usb_boot" -> "rom_func_lookup" [style=solid];
"resetd_control_xfer_cb" -> "reset_usb_boot" [style=solid];
"resetd_control_xfer_cb" -> "watchdog_reboot" [style=solid];
"rom_funcs_lookup" -> "rom_func_lookup" [style=solid];
"rp2040_chip_version" -> "__assert_func" [style=solid];
"runtime_init" -> "__assert_func" [style=solid];
"runtime_init" -> "alarm_pool_init_default" [style=solid];
"runtime_init" -> "clocks_init" [style=solid];
"runtime_init" -> "irq_init_priorities" [style=solid];
"runtime_init" -> "mutex_init" [style=solid];
"runtime_init" -> "recursive_mutex_init" [style=solid];
"runtime_init" -> "spin_locks_reset" [style=solid];
"sem_acquire_block_until" -> "best_effort_wfe_or_timeout" [style=solid];
"sem_acquire_timeout_ms" -> "__assert_func" [style=solid];
"sem_acquire_timeout_ms" -> "sem_acquire_block_until" [style=solid];
"sem_acquire_timeout_ms" -> "time_us_64" [style=solid];
"sem_acquire_timeout_us" -> "__assert_func" [style=solid];
"sem_acquire_timeout_us" -> "sem_acquire_block_until" [style=solid];
"sem_acquire_timeout_us" -> "time_us_64" [style=solid];
"sem_init" -> "lock_init" [style=solid];
"sem_init" -> "next_striped_spin_lock_num" [style=solid];
"sem_reset" -> "__assert_func" [style=solid];
"sensirion_common_bytes_to_float" -> "sensirion_common_bytes_to_uint32_t" [style=solid];
"sensirion_common_bytes_to_int16_t" -> "sensirion_common_bytes_to_uint16_t" [style=solid];
"sensirion_common_bytes_to_int32_t" -> "sensirion_common_bytes_to_uint32_t" [style=solid];
"sensirion_common_float_to_bytes" -> "sensirion_common_uint32_t_to_bytes" [style=solid];
"sensirion_i2c_add_bytes_to_buffer" -> "sensirion_i2c_generate_crc" [style=solid];
"sensirion_i2c_add_float_to_buffer" -> "sensirion_i2c_generate_crc" [style=solid];
"sensirion_i2c_add_int16_t_to_buffer" -> "sensirion_i2c_add_uint16_t_to_buffer" [style=solid];
"sensirion_i2c_add_int32_t_to_buffer" -> "sensirion_i2c_add_uint32_t_to_buffer" [style=solid];
"sensirion_i2c_add_uint16_t_to_buffer" -> "sensirion_i2c_generate_crc" [style=solid];
"sensirion_i2c_add_uint32_t_to_buffer" -> "sensirion_i2c_generate_crc" [style=solid];
"sensirion_i2c_check_crc" -> "sensirion_i2c_generate_crc" [style=solid];
"sensirion_i2c_delayed_read_cmd" -> "sensirion_i2c_fill_cmd_send_buf" [style=solid];
"sensirion_i2c_delayed_read_cmd" -> "sensirion_i2c_hal_sleep_usec" [style=solid];
"sensirion_i2c_delayed_read_cmd" -> "sensirion_i2c_hal_write" [style=solid];
"sensirion_i2c_delayed_read_cmd" -> "sensirion_i2c_read_words" [style=solid];
"sensirion_i2c_fill_cmd_send_buf" -> "sensirion_i2c_generate_crc" [style=solid];
"sensirion_i2c_general_call_reset" -> "sensirion_i2c_hal_write" [style=solid];
"sensirion_i2c_hal_read" -> "__assert_func" [style=solid];
"sensirion_i2c_hal_read" -> "i2c_read_blocking_until" [style=solid];
"sensirion_i2c_hal_read" -> "time_us_64" [style=solid];
"sensirion_i2c_hal_sleep_usec" -> "sleep_us" [style=solid];
"sensirion_i2c_hal_write" -> "__assert_func" [style=solid];
"sensirion_i2c_hal_write" -> "i2c_write_blocking_until" [style=solid];
"sensirion_i2c_hal_write" -> "time_us_64" [style=solid];
"sensirion_i2c_read_cmd" -> "sensirion_i2c_delayed_read_cmd" [style=solid];
"sensirion_i2c_read_data_inplace" -> "sensirion_i2c_check_crc" [style=solid];
"sensirion_i2c_read_data_inplace" -> "sensirion_i2c_hal_read" [style=solid];
"sensirion_i2c_read_words" -> "sensirion_i2c_read_words_as_bytes" [style=solid];
"sensirion_i2c_read_words_as_bytes" -> "sensirion_i2c_check_crc" [style=solid];
"sensirion_i2c_read_words_as_bytes" -> "sensirion_i2c_hal_read" [style=solid];
"sensirion_i2c_write_cmd" -> "sensirion_i2c_fill_cmd_send_buf" [style=solid];
"sensirion_i2c_write_cmd" -> "sensirion_i2c_hal_write" [style=solid];
"sensirion_i2c_write_cmd_with_args" -> "sensirion_i2c_fill_cmd_send_buf" [style=solid];
"sensirion_i2c_write_cmd_with_args" -> "sensirion_i2c_hal_write" [style=solid];
"sensirion_i2c_write_data" -> "sensirion_i2c_hal_write" [style=solid];
"set_sys_clock_48mhz" -> "clock_configure" [style=solid];
"set_sys_clock_48mhz" -> "pll_deinit" [style=solid];
"set_sys_clock_48mhz" -> "running_on_fpga" [style=solid];
"set_sys_clock_pll" -> "clock_configure" [style=solid];
"set_sys_clock_pll" -> "pll_init" [style=solid];
"set_sys_clock_pll" -> "running_on_fpga" [style=solid];
"settimeofday" -> "__assert_func" [style=solid];
"settimeofday" -> "time_us_64" [style=solid];
"setup_default_uart" -> "gpio_set_function" [style=solid];
"setup_default_uart" -> "uart_init" [style=solid];
"sht3x_blocking_read_measurement" -> "ll_sht3x_read_status_register" [style=solid];
"sht3x_blocking_read_measurement" -> "sensirion_i2c_hal_sleep_usec" [style=solid];
"sht3x_blocking_read_measurement" -> "sht3x_read_measurement" [style=solid];
"sht3x_blocking_read_measurement" -> "signal_humidity" [style=solid];
"sht3x_blocking_read_measurement" -> "signal_temperature" [style=solid];
"sht3x_clear_status_register" -> "sensirion_i2c_add_command16_to_buffer" [style=solid];
"sht3x_clear_status_register" -> "sensirion_i2c_hal_sleep_usec" [style=solid];
"sht3x_clear_status_register" -> "sensirion_i2c_write_data" [style=solid];
"sht3x_disable_heater" -> "sensirion_i2c_add_command16_to_buffer" [style=solid];
"sht3x_disable_heater" -> "sensirion_i2c_hal_sleep_usec" [style=solid];
"sht3x_disable_heater" -> "sensirion_i2c_write_data" [style=solid];
"sht3x_enable_heater" -> "sensirion_i2c_add_command16_to_buffer" [style=solid];
"sht3x_enable_heater" -> "sensirion_i2c_hal_sleep_usec" [style=solid];
"sht3x_enable_heater" -> "sensirion_i2c_write_data" [style=solid];
"sht3x_measure_single_shot" -> "sht3x_measure_single_shot_high_repeatability" [style=solid];
"sht3x_measure_single_shot" -> "sht3x_measure_single_shot_high_repeatability_clock_stretching" [style=solid];
"sht3x_measure_single_shot" -> "sht3x_measure_single_shot_low_repeatability" [style=solid];
"sht3x_measure_single_shot" -> "sht3x_measure_single_shot_low_repeatability_clock_stretching" [style=solid];
"sht3x_measure_single_shot" -> "sht3x_measure_single_shot_medium_repeatability" [style=solid];
"sht3x_measure_single_shot" -> "sht3x_measure_single_shot_medium_repeatability_clock_stretching" [style=solid];
"sht3x_measure_single_shot" -> "signal_humidity" [style=solid];
"sht3x_measure_single_shot" -> "signal_temperature" [style=solid];
"sht3x_measure_single_shot_high_repeatability" -> "sensirion_common_bytes_to_uint16_t" [style=solid];
"sht3x_measure_single_shot_high_repeatability" -> "sensirion_i2c_add_command16_to_buffer" [style=solid];
"sht3x_measure_single_shot_high_repeatability" -> "sensirion_i2c_hal_sleep_usec" [style=solid];
"sht3x_measure_single_shot_high_repeatability" -> "sensirion_i2c_read_data_inplace" [style=solid];
"sht3x_measure_single_shot_high_repeatability" -> "sensirion_i2c_write_data" [style=solid];
"sht3x_measure_single_shot_high_repeatability_clock_stretching" -> "sensirion_common_bytes_to_uint16_t" [style=solid];
"sht3x_measure_single_shot_high_repeatability_clock_stretching" -> "sensirion_i2c_add_command16_to_buffer" [style=solid];
"sht3x_measure_single_shot_high_repeatability_clock_stretching" -> "sensirion_i2c_hal_sleep_usec" [style=solid];
"sht3x_measure_single_shot_high_repeatability_clock_stretching" -> "sensirion_i2c_read_data_inplace" [style=solid];
"sht3x_measure_single_shot_high_repeatability_clock_stretching" -> "sensirion_i2c_write_data" [style=solid];
"sht3x_measure_single_shot_low_repeatability" -> "sensirion_common_bytes_to_uint16_t" [style=solid];
"sht3x_measure_single_shot_low_repeatability" -> "sensirion_i2c_add_command16_to_buffer" [style=solid];
"sht3x_measure_single_shot_low_repeatability" -> "sensirion_i2c_hal_sleep_usec" [style=solid];
"sht3x_measure_single_shot_low_repeatability" -> "sensirion_i2c_read_data_inplace" [style=solid];
"sht3x_measure_single_shot_low_repeatability" -> "sensirion_i2c_write_data" [style=solid];
"sht3x_measure_single_shot_low_repeatability_clock_stretching" -> "sensirion_common_bytes_to_uint16_t" [style=solid];
"sht3x_measure_single_shot_low_repeatability_clock_stretching" -> "sensirion_i2c_add_command16_to_buffer" [style=solid];
"sht3x_measure_single_shot_low_repeatability_clock_stretching" -> "sensirion_i2c_hal_sleep_usec" [style=solid];
"sht3x_measure_single_shot_low_repeatability_clock_stretching" -> "sensirion_i2c_read_data_inplace" [style=solid];
"sht3x_measure_single_shot_low_repeatability_clock_stretching" -> "sensirion_i2c_write_data" [style=solid];
"sht3x_measure_single_shot_medium_repeatability" -> "sensirion_common_bytes_to_uint16_t" [style=solid];
"sht3x_measure_single_shot_medium_repeatability" -> "sensirion_i2c_add_command16_to_buffer" [style=solid];
"sht3x_measure_single_shot_medium_repeatability" -> "sensirion_i2c_hal_sleep_usec" [style=solid];
"sht3x_measure_single_shot_medium_repeatability" -> "sensirion_i2c_read_data_inplace" [style=solid];
"sht3x_measure_single_shot_medium_repeatability" -> "sensirion_i2c_write_data" [style=solid];
"sht3x_measure_single_shot_medium_repeatability_clock_stretching" -> "sensirion_common_bytes_to_uint16_t" [style=solid];
"sht3x_measure_single_shot_medium_repeatability_clock_stretching" -> "sensirion_i2c_add_command16_to_buffer" [style=solid];
"sht3x_measure_single_shot_medium_repeatability_clock_stretching" -> "sensirion_i2c_hal_sleep_usec" [style=solid];
"sht3x_measure_single_shot_medium_repeatability_clock_stretching" -> "sensirion_i2c_read_data_inplace" [style=solid];
"sht3x_measure_single_shot_medium_repeatability_clock_stretching" -> "sensirion_i2c_write_data" [style=solid];
"sht3x_read_measurement" -> "sensirion_common_bytes_to_uint16_t" [style=solid];
"sht3x_read_measurement" -> "sensirion_i2c_add_command16_to_buffer" [style=solid];
"sht3x_read_measurement" -> "sensirion_i2c_read_data_inplace" [style=solid];
"sht3x_read_measurement" -> "sensirion_i2c_write_data" [style=solid];
"sht3x_read_status_register" -> "ll_sht3x_read_status_register" [style=solid];
"sht3x_soft_reset" -> "sensirion_i2c_add_command16_to_buffer" [style=solid];
"sht3x_soft_reset" -> "sensirion_i2c_hal_sleep_usec" [style=solid];
"sht3x_soft_reset" -> "sensirion_i2c_write_data" [style=solid];
"sht3x_start_art_measurement" -> "sensirion_i2c_add_command16_to_buffer" [style=solid];
"sht3x_start_art_measurement" -> "sensirion_i2c_write_data" [style=solid];
"sht3x_start_measurement_0_5_mps_high_repeatability" -> "sensirion_i2c_add_command16_to_buffer" [style=solid];
"sht3x_start_measurement_0_5_mps_high_repeatability" -> "sensirion_i2c_hal_sleep_usec" [style=solid];
"sht3x_start_measurement_0_5_mps_high_repeatability" -> "sensirion_i2c_write_data" [style=solid];
"sht3x_start_measurement_0_5_mps_low_repeatability" -> "sensirion_i2c_add_command16_to_buffer" [style=solid];
"sht3x_start_measurement_0_5_mps_low_repeatability" -> "sensirion_i2c_hal_sleep_usec" [style=solid];
"sht3x_start_measurement_0_5_mps_low_repeatability" -> "sensirion_i2c_write_data" [style=solid];
"sht3x_start_measurement_0_5_mps_medium_repeatability" -> "sensirion_i2c_add_command16_to_buffer" [style=solid];
"sht3x_start_measurement_0_5_mps_medium_repeatability" -> "sensirion_i2c_hal_sleep_usec" [style=solid];
"sht3x_start_measurement_0_5_mps_medium_repeatability" -> "sensirion_i2c_write_data" [style=solid];
"sht3x_start_measurement_10_mps_high_repeatability" -> "sensirion_i2c_add_command16_to_buffer" [style=solid];
"sht3x_start_measurement_10_mps_high_repeatability" -> "sensirion_i2c_hal_sleep_usec" [style=solid];
"sht3x_start_measurement_10_mps_high_repeatability" -> "sensirion_i2c_write_data" [style=solid];
"sht3x_start_measurement_10_mps_low_repeatability" -> "sensirion_i2c_add_command16_to_buffer" [style=solid];
"sht3x_start_measurement_10_mps_low_repeatability" -> "sensirion_i2c_hal_sleep_usec" [style=solid];
"sht3x_start_measurement_10_mps_low_repeatability" -> "sensirion_i2c_write_data" [style=solid];
"sht3x_start_measurement_10_mps_medium_repeatability" -> "sensirion_i2c_add_command16_to_buffer" [style=solid];
"sht3x_start_measurement_10_mps_medium_repeatability" -> "sensirion_i2c_hal_sleep_usec" [style=solid];
"sht3x_start_measurement_10_mps_medium_repeatability" -> "sensirion_i2c_write_data" [style=solid];
"sht3x_start_measurement_1_mps_high_repeatability" -> "sensirion_i2c_add_command16_to_buffer" [style=solid];
"sht3x_start_measurement_1_mps_high_repeatability" -> "sensirion_i2c_hal_sleep_usec" [style=solid];
"sht3x_start_measurement_1_mps_high_repeatability" -> "sensirion_i2c_write_data" [style=solid];
"sht3x_start_measurement_1_mps_low_repeatability" -> "sensirion_i2c_add_command16_to_buffer" [style=solid];
"sht3x_start_measurement_1_mps_low_repeatability" -> "sensirion_i2c_hal_sleep_usec" [style=solid];
"sht3x_start_measurement_1_mps_low_repeatability" -> "sensirion_i2c_write_data" [style=solid];
"sht3x_start_measurement_1_mps_medium_repeatability" -> "sensirion_i2c_add_command16_to_buffer" [style=solid];
"sht3x_start_measurement_1_mps_medium_repeatability" -> "sensirion_i2c_hal_sleep_usec" [style=solid];
"sht3x_start_measurement_1_mps_medium_repeatability" -> "sensirion_i2c_write_data" [style=solid];
"sht3x_start_measurement_2_mps_high_repeatability" -> "sensirion_i2c_add_command16_to_buffer" [style=solid];
"sht3x_start_measurement_2_mps_high_repeatability" -> "sensirion_i2c_hal_sleep_usec" [style=solid];
"sht3x_start_measurement_2_mps_high_repeatability" -> "sensirion_i2c_write_data" [style=solid];
"sht3x_start_measurement_2_mps_low_repeatability" -> "sensirion_i2c_add_command16_to_buffer" [style=solid];
"sht3x_start_measurement_2_mps_low_repeatability" -> "sensirion_i2c_hal_sleep_usec" [style=solid];
"sht3x_start_measurement_2_mps_low_repeatability" -> "sensirion_i2c_write_data" [style=solid];
"sht3x_start_measurement_2_mps_medium_repeatability" -> "sensirion_i2c_add_command16_to_buffer" [style=solid];
"sht3x_start_measurement_2_mps_medium_repeatability" -> "sensirion_i2c_hal_sleep_usec" [style=solid];
"sht3x_start_measurement_2_mps_medium_repeatability" -> "sensirion_i2c_write_data" [style=solid];
"sht3x_start_measurement_4_mps_high_repeatability" -> "sensirion_i2c_add_command16_to_buffer" [style=solid];
"sht3x_start_measurement_4_mps_high_repeatability" -> "sensirion_i2c_hal_sleep_usec" [style=solid];
"sht3x_start_measurement_4_mps_high_repeatability" -> "sensirion_i2c_write_data" [style=solid];
"sht3x_start_measurement_4_mps_low_repeatability" -> "sensirion_i2c_add_command16_to_buffer" [style=solid];
"sht3x_start_measurement_4_mps_low_repeatability" -> "sensirion_i2c_hal_sleep_usec" [style=solid];
"sht3x_start_measurement_4_mps_low_repeatability" -> "sensirion_i2c_write_data" [style=solid];
"sht3x_start_measurement_4_mps_medium_repeatability" -> "sensirion_i2c_add_command16_to_buffer" [style=solid];
"sht3x_start_measurement_4_mps_medium_repeatability" -> "sensirion_i2c_hal_sleep_usec" [style=solid];
"sht3x_start_measurement_4_mps_medium_repeatability" -> "sensirion_i2c_write_data" [style=solid];
"sht3x_start_periodic_measurement" -> "sht3x_start_measurement_0_5_mps_high_repeatability" [style=solid];
"sht3x_start_periodic_measurement" -> "sht3x_start_measurement_0_5_mps_low_repeatability" [style=solid];
"sht3x_start_periodic_measurement" -> "sht3x_start_measurement_0_5_mps_medium_repeatability" [style=solid];
"sht3x_start_periodic_measurement" -> "sht3x_start_measurement_10_mps_high_repeatability" [style=solid];
"sht3x_start_periodic_measurement" -> "sht3x_start_measurement_10_mps_low_repeatability" [style=solid];
"sht3x_start_periodic_measurement" -> "sht3x_start_measurement_10_mps_medium_repeatability" [style=solid];
"sht3x_start_periodic_measurement" -> "sht3x_start_measurement_1_mps_high_repeatability" [style=solid];
"sht3x_start_periodic_measurement" -> "sht3x_start_measurement_1_mps_low_repeatability" [style=solid];
"sht3x_start_periodic_measurement" -> "sht3x_start_measurement_1_mps_medium_repeatability" [style=solid];
"sht3x_start_periodic_measurement" -> "sht3x_start_measurement_2_mps_high_repeatability" [style=solid];
"sht3x_start_periodic_measurement" -> "sht3x_start_measurement_2_mps_low_repeatability" [style=solid];
"sht3x_start_periodic_measurement" -> "sht3x_start_measurement_2_mps_medium_repeatability" [style=solid];
"sht3x_start_periodic_measurement" -> "sht3x_start_measurement_4_mps_high_repeatability" [style=solid];
"sht3x_start_periodic_measurement" -> "sht3x_start_measurement_4_mps_low_repeatability" [style=solid];
"sht3x_start_periodic_measurement" -> "sht3x_start_measurement_4_mps_medium_repeatability" [style=solid];
"sht3x_stop_measurement" -> "sensirion_i2c_add_command16_to_buffer" [style=solid];
"sht3x_stop_measurement" -> "sensirion_i2c_hal_sleep_usec" [style=solid];
"sht3x_stop_measurement" -> "sensirion_i2c_write_data" [style=solid];
"sleep_ms" -> "sleep_us" [style=solid];
"sleep_until" -> "__assert_func" [style=solid];
"sleep_until" -> "alarm_pool_add_alarm_at" [style=solid];
"sleep_until" -> "alarm_pool_get_default" [style=solid];
"sleep_until" -> "busy_wait_until" [style=solid];
"sleep_until" -> "panic" [style=solid];
"sleep_until" -> "sleep_until_callback" [style=dotted];
"sleep_until" -> "time_us_64" [style=solid];
"sleep_us" -> "__assert_func" [style=solid];
"sleep_us" -> "sleep_until" [style=solid];
"sleep_us" -> "time_us_64" [style=solid];
"spin_lock_claim" -> "hw_claim_or_assert" [style=solid];
"spin_lock_claim_mask" -> "spin_lock_claim" [style=solid];
"spin_lock_claim_unused" -> "hw_claim_unused_from_range" [style=solid];
"spin_lock_init" -> "__assert_func" [style=solid];
"spin_lock_is_claimed" -> "hw_is_claimed" [style=solid];
"spin_lock_unclaim" -> "hw_claim_clear" [style=solid];
"stdio_buffered_printer" -> "stdio_stack_buffer_flush" [style=solid];
"stdio_get_until" -> "busy_wait_us" [style=solid];
"stdio_init_all" -> "stdio_usb_init" [style=solid];
"stdio_put_string" -> "stdio_out_chars_crlf" [style=dotted];
"stdio_put_string" -> "stdio_out_chars_no_crlf" [style=dotted];
"stdio_put_string" -> "stdout_serialize_begin" [style=solid];
"stdio_put_string" -> "stdout_serialize_end" [style=solid];
"stdio_stack_buffer_flush" -> "stdio_out_chars_crlf" [style=solid];
"stdio_usb_connected" -> "tud_cdc_n_connected" [style=solid];
"stdio_usb_in_chars" -> "__assert_func" [style=solid];
"stdio_usb_in_chars" -> "mutex_exit" [style=solid];
"stdio_usb_in_chars" -> "mutex_try_enter_block_until" [style=solid];
"stdio_usb_in_chars" -> "stdio_usb_connected" [style=solid];
"stdio_usb_in_chars" -> "time_us_64" [style=solid];
"stdio_usb_in_chars" -> "tud_cdc_n_available" [style=solid];
"stdio_usb_in_chars" -> "tud_cdc_n_read" [style=solid];
"stdio_usb_in_chars" -> "tud_task_ext" [style=solid];
"stdio_usb_init" -> "__assert_func" [style=solid];
"stdio_usb_init" -> "alarm_pool_add_alarm_at" [style=solid];
"stdio_usb_init" -> "alarm_pool_core_num" [style=solid];
"stdio_usb_init" -> "alarm_pool_get_default" [style=solid];
"stdio_usb_init" -> "critical_section_init_with_lock_num" [style=solid];
"stdio_usb_init" -> "irq_add_shared_handler" [style=solid];
"stdio_usb_init" -> "irq_has_shared_handler" [style=solid];
"stdio_usb_init" -> "irq_set_enabled" [style=solid];
"stdio_usb_init" -> "irq_set_exclusive_handler" [style=solid];
"stdio_usb_init" -> "low_priority_worker_irq" [style=dotted];
"stdio_usb_init" -> "mutex_init" [style=solid];
"stdio_usb_init" -> "next_striped_spin_lock_num" [style=solid];
"stdio_usb_init" -> "stdio_set_driver_enabled" [style=solid];
"stdio_usb_init" -> "time_us_64" [style=solid];
"stdio_usb_init" -> "timer_task" [style=dotted];
"stdio_usb_init" -> "tusb_init" [style=solid];
"stdio_usb_init" -> "usb_irq" [style=dotted];
"stdio_usb_init" -> "user_irq_claim_unused" [style=solid];
"stdio_usb_out_chars" -> "__assert_func" [style=solid];
"stdio_usb_out_chars" -> "mutex_exit" [style=solid];
"stdio_usb_out_chars" -> "mutex_try_enter_block_until" [style=solid];
"stdio_usb_out_chars" -> "stdio_usb_connected" [style=solid];
"stdio_usb_out_chars" -> "time_us_64" [style=solid];
"stdio_usb_out_chars" -> "tud_cdc_n_write" [style=solid];
"stdio_usb_out_chars" -> "tud_cdc_n_write_available" [style=solid];
"stdio_usb_out_chars" -> "tud_cdc_n_write_flush" [style=solid];
"stdio_usb_out_chars" -> "tud_task_ext" [style=solid];
"stdout_serialize_begin" -> "__assert_func" [style=solid];
"stdout_serialize_begin" -> "mutex_try_enter_block_until" [style=solid];
"stdout_serialize_begin" -> "time_us_64" [style=solid];
"stdout_serialize_end" -> "mutex_exit" [style=solid];
"sync_ep_buffer" -> "__assert_func" [style=solid];
"timer_pool_entry_comparator" -> "__assert_func" [style=solid];
"timer_task" -> "irq_set_pending" [style=solid];
"tu_edpt_claim" -> "mutex_enter_timeout_ms" [style=solid];
"tu_edpt_claim" -> "mutex_exit" [style=solid];
"tu_edpt_release" -> "mutex_enter_timeout_ms" [style=solid];
"tu_edpt_release" -> "mutex_exit" [style=solid];
"tu_edpt_stream_init" -> "mutex_init" [style=solid];
"tu_edpt_stream_init" -> "tu_fifo_config" [style=solid];
"tu_edpt_stream_read" -> "tu_edpt_stream_read_xfer" [style=solid];
"tu_edpt_stream_read" -> "tu_fifo_read_n" [style=solid];
"tu_edpt_stream_read_xfer" -> "tu_fifo_remaining" [style=solid];
"tu_edpt_stream_read_xfer" -> "usbd_edpt_claim" [style=solid];
"tu_edpt_stream_read_xfer" -> "usbd_edpt_release" [style=solid];
"tu_edpt_stream_read_xfer" -> "usbd_edpt_xfer" [style=solid];
"tu_edpt_stream_write" -> "tu_edpt_stream_write_xfer" [style=solid];
"tu_edpt_stream_write" -> "tu_fifo_count" [style=solid];
"tu_edpt_stream_write" -> "tu_fifo_write_n" [style=solid];
"tu_edpt_stream_write_xfer" -> "tu_fifo_count" [style=solid];
"tu_edpt_stream_write_xfer" -> "tu_fifo_read_n" [style=solid];
"tu_edpt_stream_write_xfer" -> "usbd_edpt_claim" [style=solid];
"tu_edpt_stream_write_xfer" -> "usbd_edpt_release" [style=solid];
"tu_edpt_stream_write_xfer" -> "usbd_edpt_xfer" [style=solid];
"tu_edpt_stream_write_zlp_if_needed" -> "tu_fifo_count" [style=solid];
"tu_edpt_stream_write_zlp_if_needed" -> "usbd_edpt_claim" [style=solid];
"tu_edpt_stream_write_zlp_if_needed" -> "usbd_edpt_xfer" [style=solid];
"tu_fifo_advance_read_pointer" -> "advance_index" [style=solid];
"tu_fifo_advance_write_pointer" -> "advance_index" [style=solid];
"tu_fifo_clear" -> "mutex_enter_timeout_ms" [style=solid];
"tu_fifo_clear" -> "mutex_exit" [style=solid];
"tu_fifo_config" -> "mutex_enter_timeout_ms" [style=solid];
"tu_fifo_config" -> "mutex_exit" [style=solid];
"tu_fifo_correct_read_pointer" -> "mutex_enter_timeout_ms" [style=solid];
"tu_fifo_correct_read_pointer" -> "mutex_exit" [style=solid];
"tu_fifo_get_read_info" -> "mutex_enter_timeout_ms" [style=solid];
"tu_fifo_get_read_info" -> "mutex_exit" [style=solid];
"tu_fifo_peek" -> "_tu_fifo_peek" [style=solid];
"tu_fifo_peek" -> "mutex_enter_timeout_ms" [style=solid];
"tu_fifo_peek" -> "mutex_exit" [style=solid];
"tu_fifo_peek_n" -> "_tu_fifo_peek_n" [style=solid];
"tu_fifo_peek_n" -> "mutex_enter_timeout_ms" [style=solid];
"tu_fifo_peek_n" -> "mutex_exit" [style=solid];
"tu_fifo_read" -> "_tu_fifo_peek" [style=solid];
"tu_fifo_read" -> "advance_index" [style=solid];
"tu_fifo_read" -> "mutex_enter_timeout_ms" [style=solid];
"tu_fifo_read" -> "mutex_exit" [style=solid];
"tu_fifo_read_n" -> "_tu_fifo_read_n" [style=solid];
"tu_fifo_read_n_const_addr_full_words" -> "_tu_fifo_read_n" [style=solid];
"tu_fifo_set_overwritable" -> "mutex_enter_timeout_ms" [style=solid];
"tu_fifo_set_overwritable" -> "mutex_exit" [style=solid];
"tu_fifo_write" -> "advance_index" [style=solid];
"tu_fifo_write" -> "mutex_enter_timeout_ms" [style=solid];
"tu_fifo_write" -> "mutex_exit" [style=solid];
"tu_fifo_write" -> "tu_fifo_full" [style=solid];
"tu_fifo_write_n" -> "_tu_fifo_write_n" [style=solid];
"tu_fifo_write_n_const_addr_full_words" -> "_tu_fifo_write_n" [style=solid];
"tud_cdc_line_coding_cb" -> "reset_usb_boot" [style=solid];
"tud_cdc_n_available" -> "tu_fifo_count" [style=solid];
"tud_cdc_n_connected" -> "tud_mounted" [style=solid];
"tud_cdc_n_connected" -> "tud_suspended" [style=solid];
"tud_cdc_n_peek" -> "tu_fifo_peek" [style=solid];
"tud_cdc_n_read" -> "_prep_out_transaction" [style=solid];
"tud_cdc_n_read" -> "tu_fifo_read_n" [style=solid];
"tud_cdc_n_read_flush" -> "_prep_out_transaction" [style=solid];
"tud_cdc_n_read_flush" -> "tu_fifo_clear" [style=solid];
"tud_cdc_n_write" -> "tu_fifo_count" [style=solid];
"tud_cdc_n_write" -> "tu_fifo_write_n" [style=solid];
"tud_cdc_n_write" -> "tud_cdc_n_write_flush" [style=solid];
"tud_cdc_n_write_available" -> "tu_fifo_remaining" [style=solid];
"tud_cdc_n_write_clear" -> "tu_fifo_clear" [style=solid];
"tud_cdc_n_write_flush" -> "tu_fifo_count" [style=solid];
"tud_cdc_n_write_flush" -> "tu_fifo_read_n" [style=solid];
"tud_cdc_n_write_flush" -> "tud_mounted" [style=solid];
"tud_cdc_n_write_flush" -> "tud_suspended" [style=solid];
"tud_cdc_n_write_flush" -> "usbd_edpt_claim" [style=solid];
"tud_cdc_n_write_flush" -> "usbd_edpt_release" [style=solid];
"tud_cdc_n_write_flush" -> "usbd_edpt_xfer" [style=solid];
"tud_cdc_rx_cb" -> "usbd_defer_func" [style=solid];
"tud_connect" -> "dcd_connect" [style=dotted];
"tud_control_status" -> "usbd_edpt_xfer" [style=solid];
"tud_control_xfer" -> "_data_stage_xact" [style=solid];
"tud_control_xfer" -> "usbd_edpt_xfer" [style=solid];
"tud_descriptor_string_cb" -> "pico_get_unique_board_id_string" [style=solid];
"tud_disconnect" -> "dcd_disconnect" [style=dotted];
"tud_init" -> "critical_section_init" [style=solid];
"tud_init" -> "dcd_init" [style=solid];
"tud_init" -> "dcd_int_enable" [style=solid];
"tud_init" -> "mutex_init" [style=solid];
"tud_init" -> "tu_fifo_clear" [style=solid];
"tud_init" -> "tud_inited" [style=solid];
"tud_init" -> "usbd_app_driver_get_cb" [style=dotted];
"tud_remote_wakeup" -> "dcd_remote_wakeup" [style=solid];
"tud_task_event_ready" -> "tu_fifo_empty" [style=solid];
"tud_task_event_ready" -> "tusb_inited" [style=solid];
"tud_task_ext" -> "dcd_edpt_stall" [style=solid];
"tud_task_ext" -> "process_control_request" [style=solid];
"tud_task_ext" -> "tu_fifo_read" [style=solid];
"tud_task_ext" -> "tusb_inited" [style=solid];
"tud_task_ext" -> "usbd_app_driver_get_cb" [style=dotted];
"tud_task_ext" -> "usbd_control_xfer_cb" [style=solid];
"tud_task_ext" -> "usbd_reset" [style=solid];
"tusb_init" -> "tud_init" [style=solid];
"tusb_inited" -> "tud_inited" [style=solid];
"uart_disable_before_lcr_write" -> "busy_wait_us" [style=solid];
"uart_disable_before_lcr_write" -> "clock_get_hz" [style=solid];
"uart_init" -> "clock_get_hz" [style=solid];
"uart_init" -> "uart_set_baudrate" [style=solid];
"uart_init" -> "uart_set_format" [style=solid];
"uart_init" -> "uart_set_translate_crlf" [style=solid];
"uart_set_baudrate" -> "clock_get_hz" [style=solid];
"uart_set_baudrate" -> "uart_write_lcr_bits_masked" [style=solid];
"uart_set_break" -> "uart_write_lcr_bits_masked" [style=solid];
"uart_set_fifo_enabled" -> "uart_write_lcr_bits_masked" [style=solid];
"uart_set_format" -> "uart_write_lcr_bits_masked" [style=solid];
"uart_write_lcr_bits_masked" -> "uart_disable_before_lcr_write" [style=solid];
"usb_irq" -> "irq_set_pending" [style=solid];
"usbd_control_xfer_cb" -> "_data_stage_xact" [style=solid];
"usbd_control_xfer_cb" -> "dcd_edpt0_status_complete" [style=dotted];
"usbd_control_xfer_cb" -> "dcd_edpt_stall" [style=solid];
"usbd_control_xfer_cb" -> "usbd_edpt_xfer" [style=solid];
"usbd_defer_func" -> "dcd_event_handler" [style=solid];
"usbd_edpt_claim" -> "tu_edpt_claim" [style=solid];
"usbd_edpt_clear_stall" -> "dcd_edpt_clear_stall" [style=solid];
"usbd_edpt_close" -> "dcd_edpt_close" [style=dotted];
"usbd_edpt_open" -> "dcd_edpt_open" [style=solid];
"usbd_edpt_open" -> "tu_edpt_validate" [style=solid];
"usbd_edpt_release" -> "tu_edpt_release" [style=solid];
"usbd_edpt_stall" -> "dcd_edpt_stall" [style=solid];
"usbd_edpt_xfer" -> "dcd_edpt_xfer" [style=solid];
"usbd_int_set" -> "dcd_int_disable" [style=solid];
"usbd_int_set" -> "dcd_int_enable" [style=solid];
"usbd_open_edpt_pair" -> "usbd_edpt_open" [style=solid];
"usbd_reset" -> "configuration_reset" [style=solid];
"usbd_reset" -> "usbd_control_reset" [style=solid];
"usbd_sof_enable" -> "dcd_sof_enable" [style=solid];
"user_irq_claim" -> "get_user_irq_claim_index" [style=solid];
"user_irq_claim" -> "hw_claim_or_assert" [style=solid];
"user_irq_claim_unused" -> "hw_claim_unused_from_range" [style=solid];
"user_irq_is_claimed" -> "get_user_irq_claim_index" [style=solid];
"user_irq_is_claimed" -> "hw_is_claimed" [style=solid];
"user_irq_unclaim" -> "get_user_irq_claim_index" [style=solid];
"user_irq_unclaim" -> "hw_claim_clear" [style=solid];
"vfctprintf" -> "_out_fct" [style=dotted];
"vfctprintf" -> "_vsnprintf" [style=solid];
"watchdog_enable" -> "_watchdog_enable" [style=solid];
"watchdog_reboot" -> "_watchdog_enable" [style=solid];
}
